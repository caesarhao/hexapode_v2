!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
C	generationTrajectoire.cpp	/^		double C;$/;"	m	class:GeneTraj	file:
E_MOVE_HORIZONTAL	generationTrajectoire.cpp	/^	E_MOVE_HORIZONTAL,$/;"	e	enum:_move_state	file:
E_MOVE_TOURNE	generationTrajectoire.cpp	/^	E_MOVE_TOURNE$/;"	e	enum:_move_state	file:
E_MOVE_UPDOWN	generationTrajectoire.cpp	/^	E_MOVE_UPDOWN,$/;"	e	enum:_move_state	file:
E_MOVE_VERTICAL	generationTrajectoire.cpp	/^	E_MOVE_VERTICAL,$/;"	e	enum:_move_state	file:
E_ROBOT_LEFT_UP	generationTrajectoire.cpp	/^	E_ROBOT_LEFT_UP, \/\/ 1,3,5 up$/;"	e	enum:_etat	file:
E_ROBOT_PARALLEL	generationTrajectoire.cpp	/^	E_ROBOT_PARALLEL,$/;"	e	enum:_etat	file:
E_ROBOT_RIGHT_UP	generationTrajectoire.cpp	/^	E_ROBOT_RIGHT_UP \/\/ 0, 2, 4 up$/;"	e	enum:_etat	file:
GeneTraj	generationTrajectoire.cpp	/^GeneTraj::GeneTraj(){$/;"	f	class:GeneTraj
GeneTraj	generationTrajectoire.cpp	/^class GeneTraj$/;"	c	file:
KEYCODE_DOWN	keyListener.cpp	9;"	d	file:
KEYCODE_LEFT	keyListener.cpp	8;"	d	file:
KEYCODE_RIGHT	keyListener.cpp	10;"	d	file:
KEYCODE_UP	keyListener.cpp	7;"	d	file:
MAX_A	generationTrajectoire.cpp	45;"	d	file:
MAX_ANGLE	generationTrajectoire.cpp	41;"	d	file:
MAX_X	generationTrajectoire.cpp	42;"	d	file:
MAX_Y	generationTrajectoire.cpp	43;"	d	file:
MAX_Z	generationTrajectoire.cpp	44;"	d	file:
REPLY_SIZE	subscriber.cpp	7;"	d	file:
SERVO_CARDE	generationTrajectoire.cpp	39;"	d	file:
SERVO_CENTRE	generationTrajectoire.cpp	40;"	d	file:
SERVO_PI	generationTrajectoire.cpp	38;"	d	file:
SERVO_ZERO	generationTrajectoire.cpp	37;"	d	file:
STEP_UP	generationTrajectoire.cpp	46;"	d	file:
TIMEOUT	subscriber.cpp	8;"	d	file:
__init__	hexapode_v2/msg/_etat_robot.py	/^  def __init__(self, *args, **kwds):$/;"	f
__init__	hexapode_v2/msg/_translation.py	/^  def __init__(self, *args, **kwds):$/;"	f
__init__	hexapode_v2/srv/_sequence_moteur.py	/^  def __init__(self, *args, **kwds):$/;"	f
__slots__	hexapode_v2/msg/_etat_robot.py	/^  __slots__ = ['is_ok']$/;"	v
__slots__	hexapode_v2/msg/_translation.py	/^  __slots__ = ['dx','dy','da','dh']$/;"	v
__slots__	hexapode_v2/srv/_sequence_moteur.py	/^  __slots__ = ['sequence','dim']$/;"	v
__slots__	hexapode_v2/srv/_sequence_moteur.py	/^  __slots__ = ['sortie']$/;"	v
_etat	generationTrajectoire.cpp	/^typedef enum _etat{$/;"	g	file:
_get_types	hexapode_v2/msg/_etat_robot.py	/^  def _get_types(self):$/;"	f
_get_types	hexapode_v2/msg/_translation.py	/^  def _get_types(self):$/;"	f
_get_types	hexapode_v2/srv/_sequence_moteur.py	/^  def _get_types(self):$/;"	f
_has_header	hexapode_v2/msg/_etat_robot.py	/^  _has_header = False #flag to mark the presence of a Header object$/;"	v	class:etat_robot
_has_header	hexapode_v2/msg/_translation.py	/^  _has_header = False #flag to mark the presence of a Header object$/;"	v	class:translation
_has_header	hexapode_v2/srv/_sequence_moteur.py	/^  _has_header = False #flag to mark the presence of a Header object$/;"	v	class:sequence_moteurRequest
_has_header	hexapode_v2/srv/_sequence_moteur.py	/^  _has_header = False #flag to mark the presence of a Header object$/;"	v	class:sequence_moteurResponse
_md5sum	hexapode_v2/msg/_etat_robot.py	/^  _md5sum = "9beb0c14ef18bd2e3099b2e1d9f512d6"$/;"	v	class:etat_robot
_md5sum	hexapode_v2/msg/_translation.py	/^  _md5sum = "c82a53216295fbbeb0bc9b9c9bde003f"$/;"	v	class:translation
_md5sum	hexapode_v2/srv/_sequence_moteur.py	/^  _md5sum = "01d09d28cb4dbfb14c973ae4245045e2"$/;"	v	class:sequence_moteurResponse
_md5sum	hexapode_v2/srv/_sequence_moteur.py	/^  _md5sum = "7ba244c9dcdab6d0db468c454a62a755"$/;"	v	class:sequence_moteurRequest
_md5sum	hexapode_v2/srv/_sequence_moteur.py	/^  _md5sum = '680bf1532177cbe3b9d881a62b09bcb2'$/;"	v	class:sequence_moteur
_move_state	generationTrajectoire.cpp	/^typedef enum _move_state{$/;"	g	file:
_request_class	hexapode_v2/srv/_sequence_moteur.py	/^  _request_class  = sequence_moteurRequest$/;"	v	class:sequence_moteur
_response_class	hexapode_v2/srv/_sequence_moteur.py	/^  _response_class = sequence_moteurResponse$/;"	v	class:sequence_moteur
_slot_types	hexapode_v2/msg/_etat_robot.py	/^  _slot_types = ['int64']$/;"	v
_slot_types	hexapode_v2/msg/_translation.py	/^  _slot_types = ['float64','float64','float64','float64']$/;"	v
_slot_types	hexapode_v2/srv/_sequence_moteur.py	/^  _slot_types = ['int64']$/;"	v
_slot_types	hexapode_v2/srv/_sequence_moteur.py	/^  _slot_types = ['string','int64']$/;"	v
_struct_4d	hexapode_v2/msg/_translation.py	/^_struct_4d = struct.Struct("<4d")$/;"	v
_struct_I	hexapode_v2/msg/_etat_robot.py	/^_struct_I = genpy.struct_I$/;"	v
_struct_I	hexapode_v2/msg/_translation.py	/^_struct_I = genpy.struct_I$/;"	v
_struct_I	hexapode_v2/srv/_sequence_moteur.py	/^_struct_I = genpy.struct_I$/;"	v
_struct_q	hexapode_v2/msg/_etat_robot.py	/^_struct_q = struct.Struct("<q")$/;"	v
_struct_q	hexapode_v2/srv/_sequence_moteur.py	/^_struct_q = struct.Struct("<q")$/;"	v
_type	hexapode_v2/msg/_etat_robot.py	/^  _type = "hexapode_v2\/etat_robot"$/;"	v	class:etat_robot
_type	hexapode_v2/msg/_translation.py	/^  _type = "hexapode_v2\/translation"$/;"	v	class:translation
_type	hexapode_v2/srv/_sequence_moteur.py	/^  _type          = 'hexapode_v2\/sequence_moteur'$/;"	v	class:sequence_moteur
_type	hexapode_v2/srv/_sequence_moteur.py	/^  _type = "hexapode_v2\/sequence_moteurRequest"$/;"	v	class:sequence_moteurRequest
_type	hexapode_v2/srv/_sequence_moteur.py	/^  _type = "hexapode_v2\/sequence_moteurResponse"$/;"	v	class:sequence_moteurResponse
betaA	generationTrajectoire.cpp	/^		double betaX, betaY, betaZ, betaA;$/;"	m	class:GeneTraj	file:
betaX	generationTrajectoire.cpp	/^		double betaX, betaY, betaZ, betaA;$/;"	m	class:GeneTraj	file:
betaY	generationTrajectoire.cpp	/^		double betaX, betaY, betaZ, betaA;$/;"	m	class:GeneTraj	file:
betaZ	generationTrajectoire.cpp	/^		double betaX, betaY, betaZ, betaA;$/;"	m	class:GeneTraj	file:
calcMoveType	generationTrajectoire.cpp	/^move_etat GeneTraj::calcMoveType(double dx, double dy, double dh, double da){$/;"	f	class:GeneTraj
calcNextPosition	generationTrajectoire.cpp	/^void GeneTraj::calcNextPosition(int robotNum){$/;"	f	class:GeneTraj
chatterCallback	echoKey.cpp	/^void chatterCallback(const hexapode_v2::translation trans)$/;"	f
checkAngles	generationTrajectoire.cpp	/^bool GeneTraj::checkAngles(dVector angles){$/;"	f	class:GeneTraj
cmd	generationTrajectoire.cpp	/^		char cmd[256];$/;"	m	class:GeneTraj	file:
cooked	keyListener.cpp	/^ struct termios cooked, raw;$/;"	v	typeref:struct:termios
createCmd	generationTrajectoire.cpp	/^void GeneTraj::createCmd(){$/;"	f	class:GeneTraj
createTraj	generationTrajectoire.cpp	/^void GeneTraj::createTraj(double dBetaX, double dBetaY, double dBetaZ, double dBetaA){$/;"	f	class:GeneTraj
da	keyListener.cpp	/^   float dx, dy, dh, da;$/;"	m	class:keyListener	file:
deserialize	hexapode_v2/msg/_etat_robot.py	/^  def deserialize(self, str):$/;"	f
deserialize	hexapode_v2/msg/_translation.py	/^  def deserialize(self, str):$/;"	f
deserialize	hexapode_v2/srv/_sequence_moteur.py	/^  def deserialize(self, str):$/;"	f
deserialize_numpy	hexapode_v2/msg/_etat_robot.py	/^  def deserialize_numpy(self, str, numpy):$/;"	f
deserialize_numpy	hexapode_v2/msg/_translation.py	/^  def deserialize_numpy(self, str, numpy):$/;"	f
deserialize_numpy	hexapode_v2/srv/_sequence_moteur.py	/^  def deserialize_numpy(self, str, numpy):$/;"	f
device	subscriber.cpp	/^cereal::CerealPort device;$/;"	v
dh	keyListener.cpp	/^   float dx, dy, dh, da;$/;"	m	class:keyListener	file:
dstCoor	generationTrajectoire.cpp	/^		dVector dstCoor[6];$/;"	m	class:GeneTraj	file:
dstCoorStand	generationTrajectoire.cpp	/^		dVector dstCoorStand[6];$/;"	m	class:GeneTraj	file:
dx	keyListener.cpp	/^   float dx, dy, dh, da;$/;"	m	class:keyListener	file:
dy	keyListener.cpp	/^   float dx, dy, dh, da;$/;"	m	class:keyListener	file:
ecouteEtatRobot	generationTrajectoire.cpp	/^void ecouteEtatRobot(const hexapode_v2::etat_robot etat_robot)$/;"	f
ecouteTranslation	generationTrajectoire.cpp	/^void ecouteTranslation(const hexapode_v2::translation trans)$/;"	f
envoieCmd	generationTrajectoire.cpp	/^void  envoieCmd()$/;"	f
etat_robot	hexapode_v2/msg/_etat_robot.py	/^class etat_robot(genpy.Message):$/;"	c
gen	generationTrajectoire.cpp	/^GeneTraj gen;$/;"	v
genpy	hexapode_v2/msg/_etat_robot.py	/^import genpy$/;"	i
genpy	hexapode_v2/msg/_translation.py	/^import genpy$/;"	i
genpy	hexapode_v2/srv/_sequence_moteur.py	/^import genpy$/;"	i
getCmd	generationTrajectoire.cpp	/^char* GeneTraj::getCmd(){$/;"	f	class:GeneTraj
initRobot1	generationTrajectoire.cpp	/^void GeneTraj::initRobot1(){$/;"	f	class:GeneTraj
initRobot2	generationTrajectoire.cpp	/^void GeneTraj::initRobot2(){$/;"	f	class:GeneTraj
isSerialFree	subscriber.cpp	/^bool isSerialFree(){$/;"	f
keyListener	keyListener.cpp	/^ class keyListener$/;"	c	file:
keyListener	keyListener.cpp	/^ keyListener::keyListener():$/;"	f	class:keyListener
keyLoop	keyListener.cpp	/^ void keyListener::keyLoop()$/;"	f	class:keyListener
kfd	keyListener.cpp	/^ int kfd = 0;$/;"	v
main	echoKey.cpp	/^int main(int argc, char **argv)$/;"	f
main	generationTrajectoire.cpp	/^int main(int argc, char** argv)$/;"	f
main	keyListener.cpp	/^ int main(int argc, char** argv)$/;"	f
main	subscriber.cpp	/^int main(int argc, char **argv)$/;"	f
metat	generationTrajectoire.cpp	/^		move_etat metat;$/;"	m	class:GeneTraj	file:
move_etat	generationTrajectoire.cpp	/^} move_etat;	$/;"	t	typeref:enum:_move_state	file:
nh_	keyListener.cpp	/^   ros::NodeHandle nh_;$/;"	m	class:keyListener	file:
pclient	generationTrajectoire.cpp	/^ros::ServiceClient *pclient = NULL;$/;"	v
python3	hexapode_v2/msg/_etat_robot.py	/^python3 = True if sys.hexversion > 0x03000000 else False$/;"	v
python3	hexapode_v2/msg/_translation.py	/^python3 = True if sys.hexversion > 0x03000000 else False$/;"	v
python3	hexapode_v2/srv/_sequence_moteur.py	/^python3 = True if sys.hexversion > 0x03000000 else False$/;"	v
quit	keyListener.cpp	/^ void quit(int sig)$/;"	f
raw	keyListener.cpp	/^ struct termios cooked, raw;$/;"	v	typeref:struct:
rbs	generationTrajectoire.cpp	/^		Robot rbs[6];$/;"	m	class:GeneTraj	file:
rbt_etat	generationTrajectoire.cpp	/^}rbt_etat;$/;"	t	typeref:enum:_etat	file:
reply	subscriber.cpp	/^char reply[256];$/;"	v
retablirAngles	generationTrajectoire.cpp	/^void GeneTraj::retablirAngles(){$/;"	f	class:GeneTraj
retat	generationTrajectoire.cpp	/^		rbt_etat retat;$/;"	m	class:GeneTraj	file:
robotType	generationTrajectoire.cpp	/^		int robotType;$/;"	m	class:GeneTraj	file:
sequ	subscriber.cpp	/^char sequ[256]={0};$/;"	v
sequence_moteur	hexapode_v2/srv/_sequence_moteur.py	/^class sequence_moteur(object):$/;"	c
sequence_moteur	subscriber.cpp	/^bool sequence_moteur(hexapode_v2::sequence_moteur::Request  &req, hexapode_v2::sequence_moteur::Response &res)$/;"	f
sequence_moteurRequest	hexapode_v2/srv/_sequence_moteur.py	/^class sequence_moteurRequest(genpy.Message):$/;"	c
sequence_moteurResponse	hexapode_v2/srv/_sequence_moteur.py	/^class sequence_moteurResponse(genpy.Message):$/;"	c
serialize	hexapode_v2/msg/_etat_robot.py	/^  def serialize(self, buff):$/;"	f
serialize	hexapode_v2/msg/_translation.py	/^  def serialize(self, buff):$/;"	f
serialize	hexapode_v2/srv/_sequence_moteur.py	/^  def serialize(self, buff):$/;"	f
serialize_numpy	hexapode_v2/msg/_etat_robot.py	/^  def serialize_numpy(self, buff, numpy):$/;"	f
serialize_numpy	hexapode_v2/msg/_translation.py	/^  def serialize_numpy(self, buff, numpy):$/;"	f
serialize_numpy	hexapode_v2/srv/_sequence_moteur.py	/^  def serialize_numpy(self, buff, numpy):$/;"	f
srcCoor	generationTrajectoire.cpp	/^		dVector srcCoor;$/;"	m	class:GeneTraj	file:
struct	hexapode_v2/msg/_etat_robot.py	/^import struct$/;"	i
struct	hexapode_v2/msg/_translation.py	/^import struct$/;"	i
struct	hexapode_v2/srv/_sequence_moteur.py	/^import struct$/;"	i
sys	hexapode_v2/msg/_etat_robot.py	/^import sys$/;"	i
sys	hexapode_v2/msg/_translation.py	/^import sys$/;"	i
sys	hexapode_v2/srv/_sequence_moteur.py	/^import sys$/;"	i
transAngletoNum	generationTrajectoire.cpp	/^int GeneTraj::transAngletoNum(int patteNum, int motorNum, double angle){$/;"	f	class:GeneTraj
trans_pub_	keyListener.cpp	/^   ros::Publisher trans_pub_;$/;"	m	class:keyListener	file:
translation	hexapode_v2/msg/_translation.py	/^class translation(genpy.Message):$/;"	c
vMoteur	generationTrajectoire.cpp	/^		int vMoteur[6][3];$/;"	m	class:GeneTraj	file:
vangles	generationTrajectoire.cpp	/^		dVector vangles[6];$/;"	m	class:GeneTraj	file:
~GeneTraj	generationTrajectoire.cpp	/^GeneTraj::~GeneTraj(){$/;"	f	class:GeneTraj
